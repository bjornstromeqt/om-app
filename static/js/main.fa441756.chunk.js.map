{"version":3,"sources":["components/Hero/index.js","PasswordForm.js","components/Spinner/index.js","components/Gift/utils.js","components/Gift/DateSelector.js","components/Gift/index.js","App.js","reportWebVitals.js","index.js"],"names":["Hero","title","content","theme","className","PasswordForm","currentValue","updateValue","handleChange","useCallback","e","target","value","Wrapper","type","onChange","autoComplete","styled","div","Spinner","color","Div","defaultProps","animate","keyframes","props","propTypes","PropTypes","string","makeRequest","option","onSuccess","onError","console","log","url","options","params","axios","then","response","data","catch","error","DateSelector","useState","isLoading","state","setState","handleSuccess","handleError","selectDate","useEffect","useSelectDate","map","row","index","Row","isSelected","selected","Column","Date","date","toISOString","slice","isCentered","disabled","onClick","bind","bool","Gift","passwords","App","password","setPassword","setLoading","hasCorrectPassword","setCorrectPassword","find","item","window","setTimeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa441756.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\n\nexport function Hero({title, content, theme}){\n\n    return (\n        <section className={`hero is-fullheight ${theme}`}>\n            <div className=\"hero-body\">\n                <div className=\"container\">\n                    <p className=\"title\">\n                        {title}\n                    </p>\n                    <div className=\"subtitle\">\n                        {content}\n                    </div>\n                </div>\n            </div>\n\n        </section>\n    );\n}\n\nHero.propTypes = {\n    title: PropTypes.node,\n    content: PropTypes.node,\n    theme: PropTypes.oneOf([\n        'is-success',\n        'is-primary',\n        'is-info',\n        'is-danger'\n    ])\n}\n","import styled from 'styled-components';\nimport {useCallback} from 'react';\n\n\nexport function PasswordForm({currentValue, updateValue}) {\n    const handleChange = useCallback(e => {\n        updateValue(e.target.value);\n    }, [updateValue]);\n\n    return (\n        <Wrapper>\n            <input\n                className={'input'}\n                type={'password'}\n                value={currentValue}\n                onChange={handleChange}\n                autoComplete={'omasdasd'}\n            />\n        </Wrapper>\n    );\n}\n\nconst Wrapper = styled.div`\n    max-width: 400px;\n`;\n","import PropTypes from 'prop-types';\nimport styled, {keyframes} from 'styled-components';\n\n\nexport function Spinner({color}) {\n\n    return (\n        <Wrapper>\n            <Div color={color}/>\n            <Div color={color}/>\n            <Div color={color}/>\n            <Div color={color}/>\n        </Wrapper>\n    );\n}\n\nSpinner.propTypes = {\n    color: PropTypes.string\n}\n\nSpinner.defaultProps = {\n    color: 'grey'\n}\n\nconst Wrapper = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n`;\n\nconst animate = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\n\nconst Div = styled.div`\n  box-sizing: border-box;\n  display: block;\n  position: absolute;\n  width: 64px;\n  height: 64px;\n  margin: 8px;\n  border: 8px solid ${props => props.color};\n  border-radius: 50%;\n  animation: ${animate} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n  border-color: ${props => props.color} transparent transparent transparent;\n  &:nth-child(1) {\n      animation-delay: -0.45s;\n  }\n  &:nth-child(2) {\n      animation-delay: -0.3s;\n  }\n  &:nth-child(3) {\n    animation-delay: -0.15s;\n  }    \n`;\n\nDiv.propTypes = {\n    color: PropTypes.string,\n}\n","import {useCallback, useEffect, useState} from 'react';\nimport axios from 'axios';\n\n\nexport function useSelectDate() {\n  const [state, setState] = useState({data: [], isLoading: true, error: null});\n\n  const handleSuccess = useCallback((data) => {\n    setState({data: data, isLoading: false, error: null});\n  }, [setState]);\n\n  const handleError = useCallback((error) => {\n    setState({data: [], isLoading: false, error: error});\n  }, [setState]);\n\n\n  const selectDate = useCallback((option) => {\n    setState({isLoading: true});\n    makeRequest(option, handleSuccess, handleError);\n  }, [handleSuccess, handleError]);\n\n  useEffect(() => {\n    console.log('Use effect!');\n    makeRequest('', handleSuccess, handleError);\n  }, [handleError, handleSuccess]);\n\n  return [selectDate, state];\n}\n\n\nfunction makeRequest(option = '', onSuccess, onError) {\n  console.log('Make request!');\n\n  const url = 'https://script.google.com/macros/s/AKfycbx5k_fnpRyoZJ_XwHLIXJkoF4C50ywdNlOa4TXUoh_KG4vUq6pNMGm8CtZ7xRfHX6CQ/exec';\n  const options = {params: {option: option}};\n  axios(url, options).then(response => {\n    onSuccess(response.data);\n  }).catch(error => {\n    console.error(error);\n    onError(error);\n  })\n}\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {useSelectDate} from './utils';\nimport {Spinner} from '../Spinner';\n\n\nexport function DateSelector() {\n    const [selectDate, state] = useSelectDate();\n    const {data, isLoading, error} = state;\n\n    console.log(state);\n\n    if (error) {\n        return (\n            <div>Failed to load dates.</div>\n        );\n    }\n\n    if (isLoading) {\n        return (\n            <Spinner color={'#fff'}/>\n        );\n    }\n\n    return (\n        <Wrapper>\n            {data.map((row, index) => (\n                <Row key={row.date} isSelected={!!row.selected}>\n                    <Column>\n                        {(new Date(row.date)).toISOString().slice(0, 10)}\n                    </Column>\n                    <Column isCentered={true}>\n                        {row.selected ? 'Vald!' : (\n                            <button\n                                className={'button is-small'}\n                                disabled={!!row.selected}\n                                onClick={selectDate.bind(null, index + 1)}\n                            >\n                                VÃ¤lj\n                            </button>\n                        )}\n                    </Column>\n                </Row>\n            ))}\n        </Wrapper>\n    );\n}\n\n\nconst Wrapper = styled.div`\n    margin: 20px auto;\n    font-size: 80%;\n`;\n\nconst Row = styled.div`\n    display: flex;\n    padding: 4px 0;\n    margin: 4px 0;\n    align-items: center;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n    :first-child {\n        border-top: 1px solid rgba(255,255,255, 0.1);\n    }\n    ${({isSelected}) => isSelected ? `\n        color: #85e485;\n        font-weight: bold;\n    ` : ''};\n`;\n\nRow.propTypes = {\n    isSelected: PropTypes.bool\n}\n\nconst Column = styled.div`\n    flex: 1;\n    padding-right: 20px;\n    ${(props) => props.isCentered ? `\n        text-align: center;\n    ` : ``};\n`;\n\nColumn.propTypes = {\n    isCentered: PropTypes.bool\n}\n","import styled from 'styled-components';\nimport {DateSelector} from './DateSelector';\n\n\nexport function Gift() {\n\n    return (\n        <Wrapper>\n            <p className={'content'}>\n                Stort grattis pÃ¥ eran brÃ¶llopsdag!\n            </p>\n            <p className={'content'}>\n                DÃ¥ vi vill spendera mer tid med er sÃ¥ vill vi bjuda er pÃ¥ en helkvÃ¤ll i Stockholm.\n                Nedan finns nÃ¥gra fÃ¶rslag pÃ¥ datum.\n            </p>\n            <hr/>\n            <DateSelector/>\n            <hr/>\n            <p className={'content'}>\n                Varma lyckoÃ¶nskningar â£ï¸<br/>\n                <i>\n                BjÃ¶rn, Hanna, Tom och Jeanna\n                </i>\n            </p>\n        </Wrapper>\n    );\n}\n\n\nconst Wrapper = styled.div`\n    max-width: 480px;\n`;\n","import {useEffect, useState} from 'react';\nimport {Hero} from './components/Hero';\nimport {PasswordForm} from './PasswordForm';\nimport {Spinner} from './components/Spinner';\nimport {Gift} from './components/Gift';\n\n\nconst passwords = [\n    '5yRSjtQN',\n    'test'\n];\n\n\nexport function App() {\n    const [password, setPassword] = useState('');\n    const [isLoading, setLoading] = useState(true);\n    const [hasCorrectPassword, setCorrectPassword] = useState(false);\n\n    useEffect(() => {\n        if (passwords.find(item => item === password)) {\n            setCorrectPassword(true);\n            window.setTimeout(() => {\n                setLoading(false);\n            }, 1000);\n        }\n    }, [password]);\n\n    if (hasCorrectPassword && isLoading) {\n        return (\n            <Hero\n                title={' '}\n                theme={'is-danger'}\n                content={ <Spinner color={'#fff'}/>}\n            />\n\n        );\n    }\n\n    if (hasCorrectPassword) {\n        return (\n            <Hero\n                theme={'is-info'}\n                title={'ð Olga & MÃ¥rten ð'}\n                content={(\n                    <Gift/>\n                )}\n            />\n        );\n    }\n\n    return (\n        <>\n            <Hero\n                title={'Enter password'}\n                content={(\n                    <PasswordForm\n                        currentValue={password}\n                        updateValue={setPassword}\n                    />\n                )}\n            />\n        </>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}