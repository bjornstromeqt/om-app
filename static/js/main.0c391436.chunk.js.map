{"version":3,"sources":["components/Hero/index.js","PasswordForm.js","components/Spinner/index.js","components/Gift/DateSelector.js","components/Gift/index.js","App.js","reportWebVitals.js","index.js"],"names":["Hero","title","content","theme","className","PasswordForm","currentValue","updateValue","handleChange","useCallback","e","target","value","Wrapper","type","onChange","autoComplete","styled","div","Spinner","color","Div","defaultProps","animate","keyframes","props","propTypes","PropTypes","string","AVAILABLE_DATES","DateSelector","map","dateString","Row","Column","Date","toISOString","slice","Gift","App","useState","password","setPassword","isLoading","setLoading","useEffect","window","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c391436.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\n\nexport function Hero({title, content, theme}){\n\n    return (\n        <section className={`hero is-fullheight ${theme}`}>\n            <div className=\"hero-body\">\n                <div className=\"container\">\n                    <p className=\"title\">\n                        {title}\n                    </p>\n                    <p className=\"subtitle\">\n                        {content}\n                    </p>\n                </div>\n            </div>\n\n        </section>\n    );\n}\n\nHero.propTypes = {\n    title: PropTypes.node,\n    content: PropTypes.node,\n    theme: PropTypes.oneOf([\n        'is-success',\n        'is-primary',\n        'is-info',\n        'is-danger'\n    ])\n}\n","import styled from 'styled-components';\nimport {useCallback} from 'react';\n\n\nexport function PasswordForm({currentValue, updateValue}) {\n    const handleChange = useCallback(e => {\n        updateValue(e.target.value);\n    }, [updateValue]);\n\n    return (\n        <Wrapper>\n            <input\n                className={'input'}\n                type={'password'}\n                value={currentValue}\n                onChange={handleChange}\n                autoComplete={'omasdasd'}\n            />\n        </Wrapper>\n    );\n}\n\nconst Wrapper = styled.div`\n    max-width: 400px;\n`;\n","import PropTypes from 'prop-types';\nimport styled, {keyframes} from 'styled-components';\n\n\nexport function Spinner({color}) {\n\n    return (\n        <Wrapper>\n            <Div color={color}/>\n            <Div color={color}/>\n            <Div color={color}/>\n            <Div color={color}/>\n        </Wrapper>\n    );\n}\n\nSpinner.propTypes = {\n    color: PropTypes.string\n}\n\nSpinner.defaultProps = {\n    color: 'grey'\n}\n\nconst Wrapper = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n`;\n\nconst animate = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\n\nconst Div = styled.div`\n  box-sizing: border-box;\n  display: block;\n  position: absolute;\n  width: 64px;\n  height: 64px;\n  margin: 8px;\n  border: 8px solid ${props => props.color};\n  border-radius: 50%;\n  animation: ${animate} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n  border-color: ${props => props.color} transparent transparent transparent;\n  &:nth-child(1) {\n      animation-delay: -0.45s;\n  }\n  &:nth-child(2) {\n      animation-delay: -0.3s;\n  }\n  &:nth-child(3) {\n    animation-delay: -0.15s;\n  }    \n`;\n\nDiv.propTypes = {\n    color: PropTypes.string,\n}\n","import styled from 'styled-components';\n\nconst AVAILABLE_DATES = [\n    '2021-10-10',\n    '2021-10-11',\n    '2021-10-17',\n    '2021-10-18',\n    '2021-10-20'\n];\n\n\nexport function DateSelector() {\n\n    return (\n        <Wrapper>\n            {AVAILABLE_DATES.map((dateString) => (\n                <Row key={dateString}>\n                    <Column>\n                        {(new Date(dateString)).toISOString().slice(0, 10)}\n                    </Column>\n                    <Column>\n                        <button className={'button is-small'}>\n                            V√§lj\n                        </button>\n                    </Column>\n                </Row>\n            ))}\n\n        </Wrapper>\n    );\n}\n\n\nconst Wrapper = styled.div`\n    margin: 20px auto;\n`;\n\nconst Row = styled.div`\n    display: flex;\n`;\n\nconst Column = styled.div`\n    flex: 1;\n    padding-right: 20px;\n`;\n\n","import styled from 'styled-components';\nimport {DateSelector} from './DateSelector';\n\n\nexport function Gift() {\n\n    return (\n        <Wrapper>\n            <p className={'content'}>\n                Stort grattis p√• eran br√∂llopsdag!\n            </p>\n            <p className={'content'}>\n                D√• vi vill spendera mer tid med er s√• vill vi bjuda er p√• en helkv√§ll i Stockholm.\n                Nedan finns n√•gra f√∂rslag p√• datum.\n            </p>\n            <hr/>\n            <DateSelector/>\n            <hr/>\n            <p className={'content'}>\n                Varma lycko√∂nskningar ‚ù£<br/>\n                <i>\n                Bj√∂rn, Hanna, Tom och Jeanna\n                </i>\n            </p>\n        </Wrapper>\n    );\n}\n\n\nconst Wrapper = styled.div`\n    max-width: 480px;\n`;\n","import {useEffect, useState} from 'react';\nimport {Hero} from './components/Hero';\nimport {PasswordForm} from './PasswordForm';\nimport {Spinner} from './components/Spinner';\nimport {Gift} from './components/Gift';\n\n\nexport function App() {\n    const [password, setPassword] = useState('');\n    const [isLoading, setLoading] = useState(true);\n\n    useEffect(() => {\n        if (password === 'om') {\n            window.setTimeout(() => {\n                setLoading(false);\n            }, 1500);\n        }\n    }, [password]);\n\n    if (password === 'om' && isLoading) {\n        return (\n            <Hero\n                title={' '}\n                theme={'is-danger'}\n                content={ <Spinner color={'#fff'}/>}\n            />\n\n        );\n    }\n\n    if (password === 'om' ) {\n        return (\n            <Hero\n                theme={'is-info'}\n                title={'üåü Olga & M√•rten üåü'}\n                content={(\n                    <Gift/>\n                )}\n            />\n        );\n    }\n\n    return (\n        <>\n            <Hero\n                title={'Enter password'}\n                content={(\n                    <PasswordForm\n                        currentValue={password}\n                        updateValue={setPassword}\n                    />\n                )}\n            />\n        </>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}